
DECLARE
  v_order_id uuid;
  v_item_id uuid;
  v_detail jsonb;
  v_common_item jsonb;
  v_custom_item jsonb;
  v_question_answer jsonb;
  v_photo_url text;
BEGIN
  -- Create the order
  INSERT INTO public.orders (
    user_id,
    service_type,
    pickup_address,
    pickup_pincode,
    pickup_latitude,
    pickup_longitude,
    drop_address,
    drop_pincode
  ) VALUES (
    p_user_id,
    p_service_type,
    p_pickup_address,
    p_pickup_pincode,
    p_pickup_latitude,
    p_pickup_longitude,
    p_drop_address,
    p_drop_pincode
  ) RETURNING id INTO v_order_id;
  
  -- Add order details
  IF p_order_details IS NOT NULL AND jsonb_array_length(p_order_details) > 0 THEN
    FOR v_detail IN SELECT * FROM jsonb_array_elements(p_order_details)
    LOOP
      INSERT INTO public.order_details (
        order_id,
        name,
        value
      ) VALUES (
        v_order_id,
        v_detail->>'name',
        v_detail->>'value'
      );
    END LOOP;
  END IF;
  
  -- Add common items
  IF p_common_items IS NOT NULL AND jsonb_array_length(p_common_items) > 0 THEN
    FOR v_common_item IN SELECT * FROM jsonb_array_elements(p_common_items)
    LOOP
      INSERT INTO public.common_items_in_orders (
        order_id,
        item_id,
        name,
        quantity,
        description,
        image_url
      ) VALUES (
        v_order_id,
        (v_common_item->>'item_id')::uuid,
        v_common_item->>'name',
        (v_common_item->>'quantity')::integer,
        v_common_item->>'description',
        v_common_item->>'image_url'
      );
    END LOOP;
  END IF;
  
  -- Add custom items
  IF p_custom_items IS NOT NULL AND jsonb_array_length(p_custom_items) > 0 THEN
    FOR v_custom_item IN SELECT * FROM jsonb_array_elements(p_custom_items)
    LOOP
      -- Insert custom item
      INSERT INTO public.custom_items (
        order_id,
        name,
        description,
        quantity
      ) VALUES (
        v_order_id,
        v_custom_item->>'name',
        v_custom_item->>'description',
        COALESCE((v_custom_item->>'quantity')::integer, 1)
      ) RETURNING id INTO v_item_id;
      
      -- Add photos for this custom item if any
      IF v_custom_item->'photos' IS NOT NULL AND jsonb_array_length(v_custom_item->'photos') > 0 THEN
        FOR v_photo_url IN SELECT * FROM jsonb_array_elements_text(v_custom_item->'photos')
        LOOP
          INSERT INTO public.item_photos (
            custom_item_id,
            photo_url
          ) VALUES (
            v_item_id,
            v_photo_url
          );
        END LOOP;
      END IF;
    END LOOP;
  END IF;
  
  -- Add question answers
  IF p_service_questions IS NOT NULL AND jsonb_array_length(p_service_questions) > 0 THEN
    FOR v_question_answer IN SELECT * FROM jsonb_array_elements(p_service_questions)
    LOOP
      INSERT INTO public.order_question_answers (
        order_id,
        question_id,
        question,
        answer,
        question_type,
        parent_question_id,
        additional_data
      ) VALUES (
        v_order_id,
        (v_question_answer->>'question_id')::uuid,
        v_question_answer->>'question',
        v_question_answer->>'answer',
        v_question_answer->>'question_type',
        CASE 
          WHEN v_question_answer->>'parent_question_id' IS NOT NULL 
          THEN (v_question_answer->>'parent_question_id')::uuid 
          ELSE NULL 
        END,
        v_question_answer->'additional_data'
      );
    END LOOP;
  END IF;
  
  RETURN v_order_id;
END;
