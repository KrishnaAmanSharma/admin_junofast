When the vendor clicks the **"Send Price Update Request"** button, the following happens in your code:

### 1. **What Data is Sent to the Database?**

#### a. **To the `price_update_requests` table:**
A new row is inserted with these fields:
- `order_id`: The ID of the order for which the price update is requested.
- `vendor_id`: The ID of the vendor making the request.
- `requested_price`: The new price proposed by the vendor (entered in the dialog).
- `reason`: The reason for the price update (entered in the dialog).
- `status`: Always set to `'pending'`.
- `created_at`: The current timestamp.

#### b. **To the `vendor_responses` table:**
A new row is inserted with these fields:
- `broadcast_id`: The broadcast ID for this order and vendor.
- `order_id`: The ID of the order.
- `vendor_id`: The ID of the vendor.
- `response_type`: Always set to `'price_update'`.
- `proposed_price`: The new price proposed by the vendor.
- `original_price`: The original price (from `approx_price` in the order).
- `message`: The reason for the price update.
- `created_at`: The current timestamp.

### 2. **Example Data Sent**

**To `price_update_requests`:**
```json
{
  "order_id": "ORDER_UUID",
  "vendor_id": "VENDOR_UUID",
  "requested_price": 1200.00,
  "reason": "Heavy items, need more labor",
  "status": "pending",
  "created_at": "2024-05-01T12:34:56.789Z"
}
```

**To `vendor_responses`:**
```json
{
  "broadcast_id": "BROADCAST_UUID",
  "order_id": "ORDER_UUID",
  "vendor_id": "VENDOR_UUID",
  "response_type": "price_update",
  "proposed_price": 1200.00,
  "original_price": 1000.00,
  "message": "Heavy items, need more labor",
  "created_at": "2024-05-01T12:34:56.789Z"
}
```

### 3. **How is this handled in code?**
- The logic is in `OrdersController.requestPriceUpdate`.
- The UI dialog collects the new price and reason, then calls this method.
- The method inserts into both tables as shown above.

---

**If you want to see or customize the exact payload, or add/remove fields, let me know!**