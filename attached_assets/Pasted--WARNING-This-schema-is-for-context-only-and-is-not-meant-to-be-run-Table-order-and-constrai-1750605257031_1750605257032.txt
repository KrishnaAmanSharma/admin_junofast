-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.common_items (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  service_type_id uuid,
  name text NOT NULL,
  description text NOT NULL,
  image_url text NOT NULL,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT common_items_pkey PRIMARY KEY (id),
  CONSTRAINT common_items_service_type_id_fkey FOREIGN KEY (service_type_id) REFERENCES public.service_types(id)
);
CREATE TABLE public.common_items_in_orders (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  order_id uuid,
  item_id uuid,
  name text NOT NULL,
  quantity integer NOT NULL DEFAULT 1,
  description text,
  image_url text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT common_items_in_orders_pkey PRIMARY KEY (id),
  CONSTRAINT common_items_in_orders_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT common_items_in_orders_item_id_fkey FOREIGN KEY (item_id) REFERENCES public.common_items(id)
);
CREATE TABLE public.custom_items (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  order_id uuid,
  name text NOT NULL,
  description text,
  quantity integer NOT NULL DEFAULT 1,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT custom_items_pkey PRIMARY KEY (id),
  CONSTRAINT custom_items_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.item_photos (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  custom_item_id uuid,
  photo_url text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT item_photos_pkey PRIMARY KEY (id),
  CONSTRAINT item_photos_custom_item_id_fkey FOREIGN KEY (custom_item_id) REFERENCES public.custom_items(id)
);
CREATE TABLE public.order_details (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  order_id uuid,
  name text NOT NULL,
  value text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT order_details_pkey PRIMARY KEY (id),
  CONSTRAINT order_details_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.order_question_answers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  order_id uuid NOT NULL,
  question_id uuid NOT NULL,
  question text NOT NULL,
  answer text NOT NULL,
  question_type text NOT NULL,
  parent_question_id uuid,
  additional_data jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT order_question_answers_pkey PRIMARY KEY (id),
  CONSTRAINT order_question_answers_question_id_fkey FOREIGN KEY (question_id) REFERENCES public.service_questions(id),
  CONSTRAINT order_question_answers_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.orders (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  service_type text NOT NULL,
  pickup_address text NOT NULL,
  pickup_pincode text NOT NULL,
  pickup_latitude double precision,
  pickup_longitude double precision,
  drop_address text NOT NULL,
  drop_pincode text NOT NULL,
  status text DEFAULT 'Pending'::text CHECK (status = ANY (ARRAY['Pending'::text, 'Confirmed'::text, 'In Progress'::text, 'Completed'::text, 'Cancelled'::text, 'Price Updated'::text, 'Price Accepted'::text])),
  approx_price numeric DEFAULT NULL::numeric,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  vendor_id uuid,
  CONSTRAINT orders_pkey PRIMARY KEY (id),
  CONSTRAINT orders_vendor_id_fkey FOREIGN KEY (vendor_id) REFERENCES public.vendor_profiles(id),
  CONSTRAINT orders_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.price_update_requests (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  order_id uuid,
  vendor_id uuid,
  requested_price numeric NOT NULL,
  reason text NOT NULL,
  status text DEFAULT 'pending'::text,
  admin_response text,
  created_at timestamp with time zone DEFAULT now(),
  reviewed_at timestamp with time zone,
  CONSTRAINT price_update_requests_pkey PRIMARY KEY (id),
  CONSTRAINT price_update_requests_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT price_update_requests_vendor_id_fkey FOREIGN KEY (vendor_id) REFERENCES public.vendor_profiles(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  email text NOT NULL,
  full_name text,
  phone_number text,
  avatar_url text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.service_questions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  service_type_id uuid NOT NULL,
  question text NOT NULL,
  question_type text NOT NULL CHECK (question_type = ANY (ARRAY['text'::text, 'number'::text, 'date'::text, 'boolean'::text, 'dropdown'::text, 'add_items'::text, 'sub_questions'::text])),
  is_required boolean DEFAULT true,
  display_order integer DEFAULT 0,
  options jsonb,
  parent_question_id uuid,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT service_questions_pkey PRIMARY KEY (id),
  CONSTRAINT service_questions_parent_question_id_fkey FOREIGN KEY (parent_question_id) REFERENCES public.service_questions(id),
  CONSTRAINT service_questions_service_type_id_fkey FOREIGN KEY (service_type_id) REFERENCES public.service_types(id)
);
CREATE TABLE public.service_types (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL,
  description text NOT NULL,
  image_url text NOT NULL,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT service_types_pkey PRIMARY KEY (id)
);
CREATE TABLE public.vendor_profiles (
  id uuid NOT NULL,
  email text NOT NULL UNIQUE,
  full_name text NOT NULL,
  phone_number text NOT NULL,
  business_name text NOT NULL,
  service_types ARRAY NOT NULL,
  city text NOT NULL,
  address text NOT NULL,
  status text DEFAULT 'pending_approval'::text,
  rating numeric DEFAULT 0.0,
  total_orders integer DEFAULT 0,
  completed_orders integer DEFAULT 0,
  total_earnings numeric DEFAULT 0.0,
  profile_image_url text,
  business_license text,
  insurance_info text,
  is_online boolean DEFAULT false,
  last_active_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  approved_at timestamp with time zone,
  CONSTRAINT vendor_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT vendor_profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);